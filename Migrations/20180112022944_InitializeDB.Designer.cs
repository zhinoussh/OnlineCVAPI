// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using OnlineCVAPI.Models;
using System;

namespace OnlineCVAPI.Migrations
{
    [DbContext(typeof(OnlineCVDBContext))]
    [Migration("20180112022944_InitializeDB")]
    partial class InitializeDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineCVAPI.Models.CV", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("creationDateTime")
                        .HasMaxLength(50);

                    b.Property<int>("profileId");

                    b.Property<int>("templateId");

                    b.HasKey("ID");

                    b.HasIndex("profileId");

                    b.HasIndex("templateId");

                    b.ToTable("CV");
                });

            modelBuilder.Entity("OnlineCVAPI.Models.CVTemplate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("templateHtmlFile")
                        .HasMaxLength(50);

                    b.Property<string>("templateImageFile")
                        .HasMaxLength(50);

                    b.Property<string>("templateName")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("CVTemplate");
                });

            modelBuilder.Entity("OnlineCVAPI.Models.Education", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CVId");

                    b.Property<string>("graduationYear")
                        .HasMaxLength(10);

                    b.Property<string>("institute");

                    b.HasKey("ID");

                    b.HasIndex("CVId");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("OnlineCVAPI.Models.Experience", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CVId");

                    b.Property<string>("Employer")
                        .HasMaxLength(50);

                    b.Property<string>("Location")
                        .HasMaxLength(50);

                    b.Property<string>("endMonth")
                        .HasMaxLength(4);

                    b.Property<string>("endYear")
                        .HasMaxLength(4);

                    b.Property<string>("jobTitle")
                        .HasMaxLength(50);

                    b.Property<string>("startMonth")
                        .HasMaxLength(4);

                    b.Property<string>("startYear")
                        .HasMaxLength(4);

                    b.Property<bool>("stillInRole");

                    b.HasKey("ID");

                    b.HasIndex("CVId");

                    b.ToTable("WorkHistory");
                });

            modelBuilder.Entity("OnlineCVAPI.Models.PersonalProfile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address")
                        .HasMaxLength(100);

                    b.Property<string>("email")
                        .HasMaxLength(50);

                    b.Property<string>("firstName")
                        .HasMaxLength(50);

                    b.Property<string>("lastName")
                        .HasMaxLength(50);

                    b.Property<string>("phoneNumber")
                        .HasMaxLength(10);

                    b.HasKey("ID");

                    b.ToTable("PersonalProfile");
                });

            modelBuilder.Entity("OnlineCVAPI.Models.Skill", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CVId");

                    b.Property<string>("Institute")
                        .HasMaxLength(50);

                    b.Property<string>("skillName")
                        .HasMaxLength(50);

                    b.Property<string>("year")
                        .HasMaxLength(10);

                    b.HasKey("ID");

                    b.HasIndex("CVId");

                    b.ToTable("SkillAndCertificate");
                });

            modelBuilder.Entity("OnlineCVAPI.Models.CV", b =>
                {
                    b.HasOne("OnlineCVAPI.Models.PersonalProfile", "profile")
                        .WithMany("CVs")
                        .HasForeignKey("profileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineCVAPI.Models.CVTemplate", "template")
                        .WithMany("CVs")
                        .HasForeignKey("templateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineCVAPI.Models.Education", b =>
                {
                    b.HasOne("OnlineCVAPI.Models.CV", "cv")
                        .WithMany("Educations")
                        .HasForeignKey("CVId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineCVAPI.Models.Experience", b =>
                {
                    b.HasOne("OnlineCVAPI.Models.CV", "cv")
                        .WithMany("Experiences")
                        .HasForeignKey("CVId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineCVAPI.Models.Skill", b =>
                {
                    b.HasOne("OnlineCVAPI.Models.CV", "cv")
                        .WithMany("Skills")
                        .HasForeignKey("CVId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
